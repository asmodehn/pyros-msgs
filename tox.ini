# content of: tox.ini , put in same dir as setup.py
[tox]
# Only considering ROS LTS for simplicity
envlist = py27-ros1{indigo,kinetic,lunar}, py34-ros1indigo, py35-ros1kinetic, py36-ros1{indigo,kinetic,lunar}

#, pypy
#, pypy3

[travis]
python =
  # we test every current ROS1 distro on python 2.7 (official python support for ROS1)
  2.7 : py27
  # specific old python supported natively on ubuntu/ROS LTS distro
  3.4 : py34
  3.5 : py35
  # we test every current ROS1 distro on latest python (to ensure support from pure python)
  3.6 : py36

# not tested yet
#pypy = pypy
#pypy3 = pypy3

# We depend on travis matrix
[travis:env]
ROS_DISTRO =
  kinetic: ros1kinetic
  indigo: ros1indigo
  lunar: ros1lunar

[testenv]

# Dependencies matching the version in each ROS distro
deps =
    # TODO : check why / how install_requires are installed or not in tox environments...
    ros1indigo: -rrequirements/indigo.txt
    ros1kinetic: -rrequirements/kinetic.txt
    ros1lunar: -rrequirements/lunar.txt

# to always force recreation and avoid unexpected side effects
recreate=True

commands=
    # we want to make sure python finds the installed package in tox env
    # and doesn't confuse with pyc generated during dev (which happens if we use self test feature here)
    py.test --pyargs tests {posargs}
    # Note : -s here might break your terminal...
