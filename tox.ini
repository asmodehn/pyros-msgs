# content of: tox.ini , put in same dir as setup.py
[tox]
envlist = py27-{indigo,jade,kinetic}
#, py34

#, pypy
#, pypy3

# we skip sdist since currently our sdist doesnt generate messages
# we will manually setup the package via develop in [testenv]
skipsdist=True

[travis]
2.7 = py27

#3.4 = py34

# not tested yet
#pypy = pypy
#pypy3 = pypy3

# Note : We can depend on travis matrix if needed
;[travis:env]
;DJANGO =
;  1.7: django17
;  1.8: django18, docs

[testenv]
deps =
    indigo: -rrequirements/indigo.txt
    jade: -rrequirements/jade.txt
    kinetic: -rrequirements/kinetic.txt

install_command = pip install --process-dependency-links {opts} {packages}

# to always force recreation and avoid unexpected side effects
recreate=True

# to allow access to ROS packages
# sitepackages=True
# We do not want any access to system (same as basic travis python testing)

commands=
    # First we need to generate our messages (just like ROS catkin build flow would)
    python setup.py generatemsg
    python setup.py develop
    # we use the develop way documented in http://tox.readthedocs.io/en/latest/example/general.html,
    # to be able to use generated messages from setup.py, as well as ros-site.

    # we want to make sure python finds the installed package in tox env
    # and doesn't confuse with pyc generated during dev (which happens if we use self test feature here)
    py.test --pyargs pyros_msgs/importer/tests {posargs}
    py.test --pyargs pyros_msgs/typecheck/tests {posargs}
    py.test --pyargs pyros_msgs/opt_as_array/tests {posargs}
    py.test --pyargs pyros_msgs/opt_as_nested/tests {posargs}
    # Note : -s here might break your terminal...
